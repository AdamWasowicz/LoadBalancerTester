apiVersion: v1
kind: Secret
metadata:
  name: lbt-secret
type: Opaque
data:
  # AdamDev
  postgres-user: QWRhbURldg==
  # AdamDev
  postgres-password: QWRhbURldg==
  # LBT_DB
  postgres-databasename: TEJUX0RC
  # Host=psql-db-service;Port=5600;Database=LBT_DB;Username=AdamDev;Password=AdamDev
  db-connectionstring: SG9zdD1wc3FsLWRiLXNlcnZpY2U7UG9ydD01NjAwO0RhdGFiYXNlPUxCVF9EQjtVc2VybmFtZT1BZGFtRGV2O1Bhc3N3b3JkPUFkYW1EZXY=
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: lbt-configmap
data:
  api-urls: http://+:2970
  api-mode: Development
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: psql-db-deployment
  labels:
    app: psql-db
spec:
  replicas: 1
  selector:
    matchLabels:
      app: psql-db
  template:
    metadata:
      labels:
        app: psql-db
        dude: "true"
    spec:
      containers:
      - name: psql-db
        image: postgres
        resources:
        ports:
        - containerPort: 5432
          name: psql-db
        env:
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: lbt-secret
              key: postgres-user
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: lbt-secret
              key: postgres-password
        - name: POSTGRES_DB
          valueFrom:
            secretKeyRef:
              name: lbt-secret
              key: postgres-databasename
---
apiVersion: v1
kind: Service
metadata:
  name: psql-db-service
spec:
  type: NodePort
  selector:
    app: psql-db
  ports:
  - port: 5600
    targetPort: psql-db
---
apiVersion: v1
kind: Service
metadata:
  name: psql-db-service-outside
spec:
  type: LoadBalancer
  selector:
    app: psql-db
  ports:
  - port: 30000
    targetPort: psql-db
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-deployment
spec:
  replicas: 2
  selector:
    matchLabels:
      app: api
  template:
    metadata:
      labels:
        app: api
    spec:
      containers:
      - name: api
        image: lbtContainerRegistry.azurecr.io/lbt-api
        imagePullPolicy: Always
        ports:
        - containerPort: 2970
          name: api
        env:
        # DB_CONNECTION_STRING
        - name: DB_CONNECTION_STRING
          valueFrom:
            secretKeyRef:
              name: lbt-secret
              key: db-connectionstring
        # ASPNETCORE_URLS
        - name: ASPNETCORE_URLS
          valueFrom:
            configMapKeyRef:
              name: lbt-configmap
              key: api-urls
        # MODE
        - name: MODE
          valueFrom:
            configMapKeyRef:
              name: lbt-configmap
              key: api-mode
---
apiVersion: v1
kind: Service
metadata:
  name: api-service
spec:
  ports:
  - protocol: TCP
    port: 2970
    targetPort: api
  selector:
    app: api
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: hello-world-ingress-static
  annotations:
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
spec:
  ingressClassName: nginx
  rules:
  - http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: api-service
            port: 
              number: 2970